<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme here. -->

        <item name="colorPrimary">@color/colorPrimary</item> <!--toolbar color, TextLayout Floating Label-->
        <item name="colorOnPrimary">@color/colorPrimaryDark</item>

        <!-- Status bar color -->
        <item name="colorPrimaryVariant">@color/black</item> <!-- status bar color-->
        <item name="android:statusBarColor">@color/black</item><!-- status bar color-->

<!--        // Option 2 Light Status bar-->
        <!-- Make status bar transparent -->
<!--        <item name="android:statusBarColor">@android:color/transparent</item>-->
        <!-- Add a light scrim for better text visibility -->
<!--        <item name="android:windowLightStatusBar">false</item>-->



        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@color/blue</item>
        <item name="colorControlActivated">@color/blue</item>
        <item name="colorControlHighlight">@color/colorPrimary</item>

        <!-- AppBar and Toolbar theme -->
<!--        <item name="toolbarStyle">@style/Widget.App.Toolbar</item>-->
<!--        <item name="appBarLayoutStyle">@style/Widget.App.AppBarLayout</item>-->


        <!--     NOTE:   Makes status bar semi-transparent .Content can draw behind the status bar .Ignores android:statusBarColor setting-->
<!--        <item name="android:windowTranslucentStatus" tools:ignore="NewApi">true</item>-->

        <item name="android:windowTranslucentStatus" >false</item>

        <item name="android:windowTranslucentNavigation" tools:ignore="NewApi">false</item>

        <!-- Add this style for drawer arrow -->

        <item name="drawerArrowStyle">@style/DrawerArrowStyle</item>
        <item name="actionBarStyle">@style/Widget.App.ActionBar</item>

        <!--   //textViewStyle for all textView-->
        <item name="android:textViewStyle">@style/regular_primary_16</item>


        <!--For Window Bg-->
        <item name="android:windowBackground">@color/bg</item>


    </style>


    <style name="Theme.TravelInsurance" parent="AppTheme" />

<!--    <style name="Theme.TravelInsurance.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />-->

<!--    <style name="Theme.TravelInsurance.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />-->



    <style name="textInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">


        <item name="boxBackgroundColor">@color/white</item>

        <!-- Hint text appearance -->

        <item name="android:textColor">@color/black</item>

        <!--after selecting edittext header text color-->
        <item name="hintTextColor">@color/colorAccent</item>

        <!--before hint text color-->
        <item name="android:textColorHint">@color/color_light_grey</item>
        <item name="boxStrokeErrorColor">@color/error_red</item>

        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">match_parent</item>

        <item name="android:textSize">16sp</item>

        <item name="fontFamily">@font/poppinsregular</item>

        <!--Error show specific to edittext with error message-->
        <item name="errorEnabled">false</item>


        <!--icon color inside box-->
        <item name="startIconTint">@color/default_icon_color</item>
        <item name="endIconTint">@color/default_icon_color</item>

        <!--type of box-->
        <item name="boxBackgroundMode">outline</item>

        <item name="endIconMode">clear_text</item>
        <!--  <item name="boxBackgroundColor">@android:color/transparent</item>-->

        <item name="boxStrokeWidthFocused">2dp</item> <!--after focused width-->
        <item name="boxStrokeWidth">0.7dp</item> <!--before focused width-->
        <item name="boxStrokeColor">@color/colorPrimary</item>

        <item name="android:imeOptions">actionNext </item>
<!--        <item name="android:inputType">text</item>-->

<!--        <item name="android:lines">1</item>-->




    </style>


    <style name="textInputLayoutWithoutClearTextStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">


        <item name="boxBackgroundColor">@color/white</item>

        <!-- Hint text appearance -->

        <item name="android:textColor">@color/black</item>

        <!--after selecting edittext header text color-->
        <item name="hintTextColor">@color/colorAccent</item>

        <!--before hint text color-->
        <item name="android:textColorHint">@color/color_light_grey</item>
        <item name="boxStrokeErrorColor">@color/error_red</item>

        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">match_parent</item>

        <item name="android:textSize">16sp</item>

        <item name="fontFamily">@font/poppinsregular</item>

        <!--Error show specific to edittext with error message-->
        <item name="errorEnabled">false</item>


        <!--icon color inside box-->
        <item name="startIconTint">@color/default_icon_color</item>
        <item name="endIconTint">@color/default_icon_color</item>

        <!--type of box-->
        <item name="boxBackgroundMode">outline</item>

<!--        <item name="endIconMode">custom</item>-->
        <!--  <item name="boxBackgroundColor">@android:color/transparent</item>-->
        <item name="passwordToggleTint">@color/default_icon_color</item>
        <item name="boxStrokeWidthFocused">2dp</item> <!--after focused width-->
        <item name="boxStrokeWidth">0.7dp</item> <!--before focused width-->
        <item name="boxStrokeColor">@color/colorPrimary</item>

        <item name="android:imeOptions">actionNext </item>
        <!--        <item name="android:inputType">text</item>-->

        <!--        <item name="android:lines">1</item>-->




    </style>

    <style name="textInputLayoutStyle1" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- Box stroke color -->
        <item name="boxStrokeColor">?attr/colorPrimary</item>
        <item name="boxStrokeErrorColor">@color/error_color</item>
        <item name="boxBackgroundColor">@color/white</item>

        <!-- Hint text appearance -->
        <item name="hintTextColor">@color/hint_color</item>
<!--        <item name="hintTextAppearance">@style/HintTextAppearance</item>-->


    </style>

    <style name="CustomTextInputEditText" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="android:textSize">16sp</item> <!-- Set the desired text size here -->
        <item name="android:background">@color/transparent</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:ellipsize">end</item>
        <item name="android:inputType">text</item>
        <item name="android:lines">1</item>
        <item name="android:maxLength">50</item>
        <item name="android:maxLines">1</item>

        <item name="android:minHeight">48dp</item>
        <item name="android:paddingBottom">8dp</item>
    </style>

<!--    dropdown Style-->
    <style name="dropdownInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu">
        <item name="boxBackgroundColor">@color/white</item>
        <item name="hintTextColor">@color/colorAccent</item>
        <item name="android:textColorHint">@color/color_light_grey</item>
        <item name="boxStrokeColor">@color/colorPrimary</item>
        <item name="boxStrokeWidth">0.7dp</item>
        <item name="boxStrokeWidthFocused">2dp</item>
        <item name="endIconTint">@color/default_icon_color</item>
        <item name="endIconMode">dropdown_menu</item>
    </style>
    <!-- Base style for buttons -->
    <style name="ButtonStyle.Base" parent="Widget.Material3.Button">
        <!-- Common properties for all buttons -->
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">48dp</item> <!-- Standard button height -->
        <item name="android:minHeight">48dp</item>
        <item name="android:backgroundTint">@color/colorPrimary</item>
        <item name="android:textAllCaps">true</item>
        <item name="android:textSize">16sp</item>
        <item name="android:fontFamily">@font/poppinsmedium</item>
        <item name="android:letterSpacing">0.05</item>
        <item name="cornerFamily">rounded</item>

    </style>

    <!-- Primary button style -->
    <style name="ButtonStyle.Primary" parent="ButtonStyle.Base">
        <item name="android:backgroundTint">@color/colorPrimary</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <!-- Secondary button style -->
    <style name="ButtonStyle.Secondary" parent="ButtonStyle.Base">
        <item name="android:backgroundTint">@color/black</item>
        <item name="android:textColor">@color/white</item>
    </style>


    <style name="ButtonStyle.Capsule" parent="ButtonStyle.Base">
        <item name="android:backgroundTint">@color/colorPrimary</item>
        <item name="android:textColor">@color/white</item>
        <item name="cornerSize">24dp</item> <!-- Capsule shape -->
    </style>


    <style name="AppModalStyle"
        parent="Widget.Design.BottomSheet.Modal">
        <item name="android:background">@drawable/rounded_dialog</item>
    </style>
    <style name="AlertDialogTheme" parent="Theme.Material3.DayNight.Dialog.Alert">
        <item name="android:textColorPrimary">@color/black</item>
        <item name="android:buttonTint">@color/colorAccent</item>
        <item name="buttonBarNegativeButtonStyle">@style/AlertDialogButton</item>
        <item name="buttonBarPositiveButtonStyle">@style/AlertDialogButton</item>
        <item name="buttonBarNeutralButtonStyle">@style/AlertDialogButton</item>



    </style>

    <style name="AlertDialogButton" parent="Widget.Material3.Button.TextButton.Dialog">
        <item name="android:textColor">@color/colorAccent</item>


    </style>

    <!--Dialog style-->
    <style name="ThemeOverlay.App.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorSecondary">@color/white</item>
        <item name="colorSurface">@color/blue</item>
        <!--body text color -->
        <item name="colorOnSurface">@color/colorPrimary</item>
        <item name="alertDialogStyle">@style/MaterialAlertDialog.App</item>
        <!--title text color-->
        <item name="materialAlertDialogTitleTextStyle">@style/MaterialAlertDialog.App.Title.Text
        </item>
        <item name="buttonBarPositiveButtonStyle">@style/Widget.App.Button</item>
        <item name="buttonBarNeutralButtonStyle">@style/Widget.App.Button</item>
        <item name="buttonBarNegativeButtonStyle">@style/Widget.App.Button.Negative</item>
    </style>

    <style name="MaterialAlertDialog.App" parent="MaterialAlertDialog.MaterialComponents">
        <item name="shapeAppearance">@style/ShapeAppearance.App.MediumComponent</item>
    </style>

    <style name="MaterialAlertDialog.App.Title.Text" parent="MaterialAlertDialog.MaterialComponents.Title.Text">
        <item name="android:textColor">@color/colorPrimary</item>
    </style>



    <style name="CustomDialog" parent="Theme.Material3.Light.Dialog">

        <item name="android:windowIsTranslucent">true</item>

        <item name="android:windowAnimationStyle">@style/CustomDialogAnimation</item>
        <!--            <item name="android:windowBackground">@color/transparent_color</item>&ndash;&gt;-->

        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:backgroundDimEnabled">true</item>

        <item name="android:colorBackgroundCacheHint">@null</item>
        <item name="android:windowTranslucentStatus">true</item>
        <!--        <item name="android:windowAnimationStyle">@android:style/Animation</item>-->


    </style>


    <style name="Widget.App.Button" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">
            @style/Widget.MaterialComponents.Button.TextButton.Dialog
        </item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>
        <item name="android:textColor">@color/colorAccent</item>
        <item name="android:textStyle">normal</item>
    </style>

    <style name="Widget.App.Button.Negative" parent="Widget.App.Button">
        <item name="android:textColor">@color/black</item>
    </style>




    <style name="ThemeMaterial3DateRangePicker" parent="ThemeOverlay.Material3.MaterialCalendar">
        <item name="colorPrimary">@color/colorAccent</item>
        <item name="colorOnPrimary">@color/default_icon_color</item>
        <item name="colorSurface">@color/default_icon_color</item>
        <item name="colorOnSurface">@color/black</item>
        <item name="materialCalendarHeaderTitle">@style/Material3CalendarHeader</item>
        <item name="materialCalendarHeaderToggleButton">@style/Material3HeaderToggleButton</item>
        <item name="materialCalendarStyle">@style/Material3Calendar</item>

        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.App.SmallComponent</item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.App.MediumComponent </item>
        <!--        <item name="textInputStyle">@style/regular_primary_16_gray</item>-->

    </style>


    <style name="Material3CalendarHeader" parent="Widget.Material3.MaterialCalendar.HeaderTitle">
        <item name="android:textColor">@android:color/black</item>
    </style>

    <style name="Material3HeaderToggleButton" parent="Widget.Material3.MaterialCalendar.HeaderToggleButton">
        <item name="android:tint">@android:color/black</item>
    </style>

    <style name="Material3Calendar" parent="Widget.Material3.MaterialCalendar">
        <item name="rangeFillColor">@color/light_green</item>
    </style>

    <style name="ShapeAppearance.App.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">8dp</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">4dp</item>
    </style>


</resources>